"""
Django settings for GeekySid project.

Generated by 'django-admin startproject' using Django 3.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import json

# fetching sensetive data stored in a json file 
_SecretKey = ''
_EmailUser = ''
_EmailPass = ''
_EmailHost = ''
_EmailPort = ''
_EmailSignature = ''

pathToFile= os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))
file = os.path.join(pathToFile, 'SecretFile.json')

# if os.path.exists('/etc/config.json'):
#     with open('/etc/config.json', 'r') as config_file:

if os.path.exists(file):
    with open(file, 'r') as config_file:
        sensetive_data = json.load(config_file)
        _SecretKey = sensetive_data['SECRET_KEYS']
        _EmailUser = sensetive_data['EMAIL_USER']
        _EmailPass = sensetive_data['EMAIL_PASS']
        _EmailHost = sensetive_data['EMAIL_HOST']
        _EmailPort = sensetive_data['EMAIL_PORT']
        _EmailSignature = sensetive_data['EMAIL_SIGNATURE']


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = _SecretKey

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['www.geekysid.com', 'geekysid.com', '172.105.38.72']
ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_user_agents',
    'bookstore.apps.BookstoreConfig',
    'octaprofile.apps.OctaprofileConfig',
    'scorebuzz.apps.ScorebuzzConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware'
]

ROOT_URLCONF = 'geekysid.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'template'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'geekysid.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'     # this how we will refer to static files locations
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'statics')   # place where we will store our static files
]
STATIC_ROOT = os.path.join(BASE_DIR, 'assets')  # place where django will store its static files.

# Media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Information about Email username and password to be used to sent mail to users
EMAIL_HOST = _EmailHost
EMAIL_PORT = _EmailPort
EMAIL_USER = _EmailUser
EMAIL_PASS = _EmailPass
# EMAIL_SIGNATURE = "test"

EMAIL_SIGNATURE = _EmailSignature
